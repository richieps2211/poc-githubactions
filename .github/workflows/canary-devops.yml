name: Canary Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.AZURE_SP_APPID }} -p ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Set AKS Cluster Context
      run: az aks get-credentials --resource-group kuberetesServices --name myAKSKubernetes

    - name: Deploy to Canary
      run: |
        kubectl apply -f ./kubernetes/deployment.yaml
        echo "Canary deployment applied."

    - name: Check Canary Deployment
      run: |
        echo "Checking Canary deployment status..."
        kubectl get pods
        kubectl get services
        # Puedes agregar más comandos para obtener información adicional sobre el despliegue en Canary

    - name: Request Manual Approval
      id: approve_canary
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pullRequest } = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          const body = pullRequest.body || '';
          const needsApproval = body.includes('canary-deployment') && body.includes('approve');
          return { needsApproval };

    - name: Promote or Reject Canary Deployment
      if: success() && steps.approve_canary.outcome == 'success'
      run: |
        # Verificamos el estado del job anterior para decidir si promover o rechazar el despliegue
        if [[ "${{ job.status }}" == "success" ]]; then
           # Si la aprobación fue exitosa, promovemos el despliegue canary
           echo "Canary deployment approved. Promoting to production..."
            
          # Listar los archivos en el directorio
          ls -R ./kubernetes
            
          # Mostrar el contenido de los archivos
          echo "Contents of promote-canary.yaml:"
          cat ./kubernetes/promote-canary.yaml
            
          # Aplicar el despliegue canary
          kubectl apply -f ./kubernetes/promote-canary.yaml

          echo "Canary deployment promoted to production successfully."
        else
          # Si la aprobación falla, revertimos el despliegue canary
          echo "Canary deployment rejected. Rolling back..."
            
          # Eliminar el despliegue canary y redirigir todo el tráfico al despliegue estable
          kubectl delete -f ./kubernetes/canary-deployment.yaml
            
          echo "Canary deployment rejected and rolled back."
        fi
