name: Canary dDeployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_SP_APPID }} -p ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set AKS Cluster Context
        run: az aks get-credentials --resource-group kuberetesServices --name myAKSKubernetes

      - name: Deploy to Canary
        run: |
          kubectl apply -f ./kubernetes/deployment.yaml
          echo "Canary deployment applied."

      - name: Check Canary Deployment
        run: |
          echo "Checking Canary deployment status..."
          kubectl get pods
          kubectl get services
          # Puedes agregar más comandos para obtener información adicional sobre el despliegue en Canary

      - name: Check Approval Comments
        if: github.event_name == 'issue_comment'
        id: check_approval_comments
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (context.payload.issue && context.payload.comment) {
              const issue = context.payload.issue;
              const comment = context.payload.comment;
              
              if (issue.pull_request) {
                // Si el comentario es para una solicitud de extracción
                const { data: comments } = await github.issues.listComments({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number
                });
                
                const approvalComments = comments.filter(comment => comment.user.login !== 'github-actions[bot]' && comment.body.toLowerCase().includes('approve'));
                return { hasApproval: approvalComments.length > 0 };
              } else {
                // Si el comentario es para un problema (no una solicitud de extracción)
                // Verificar si el comentario es una aprobación
                const isApproval = comment.body.toLowerCase().includes('approve');
                return { hasApproval: isApproval };
              }
            } else {
              // No hay información de la issue o el comentario
              console.log("No issue or comment information available.");
              return { hasApproval: false };
            }

      - name: Promote or Reject Canary Deployment
        if: steps.check_approval_comments.outputs.hasApproval == 'true'
        run: |
          # Se ha encontrado una aprobación en los comentarios de la solicitud de extracción
          echo "Canary deployment approved. Promoting to production..."

          # Listar los archivos en el directorio
          ls -R ./kubernetes
            
          # Mostrar el contenido de los archivos
          echo "Contents of promote-canary.yaml:"
          cat ./kubernetes/promote-canary.yaml
            
          # Aplicar el despliegue canary
          kubectl apply -f ./kubernetes/promote-canary.yaml

          echo "Canary deployment promoted to production successfully."

      - name: Reject Canary Deployment
        if: steps.check_approval_comments.outputs.hasApproval == 'false'
        run: |
          # No se ha encontrado una aprobación en los comentarios de la solicitud de extracción
          echo "Canary deployment rejected. Rolling back..."

          # Eliminar el despliegue canary y redirigir todo el tráfico al despliegue estable
          kubectl delete -f ./kubernetes/canary-deployment.yaml

          echo "Canary deployment rejected and rolled back."
