name: Canary Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.AZURE_SP_APPID }} -p ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Set AKS Cluster Context
      run: az aks get-credentials --resource-group kuberetesServices --name myAKSKubernetes

    - name: Deploy to Canary
      run: |
        kubectl apply -f ./kubernetes/deployment.yaml
        echo "Canary deployment applied."

    - name: Check Canary Deployment
      run: |
        echo "Checking Canary deployment status..."
        kubectl get pods
        kubectl get services
        # Puedes agregar más comandos para obtener información adicional sobre el despliegue en Canary

  promote_or_reject_canary:
    runs-on: ubuntu-latest
    needs: deploy
    environment: production
    steps:
      - name: Wait for manual approval
        id: approve_canary
        run: |
          echo "Waiting for manual approval to promote Canary deployment..."
          echo "Please approve or reject this deployment in the GitHub Actions interface."
          # Simplemente esperamos la entrada del usuario
          sleep 30  # Puedes ajustar el tiempo de espera según sea necesario

      - name: Promote or Reject Canary Deployment
        if: success() && steps.approve_canary.outcome == 'success'
        run: |
          # Verificamos el estado del job anterior para decidir si promover o rechazar el despliegue
          if [[ "${{ job.status }}" == "success" ]]; then
            # Si la aprobación fue exitosa, promovemos el despliegue canary
            echo "Canary deployment approved. Promoting to production..."
            # Actualizamos el servicio para redirigir todo el tráfico al despliegue canary
            kubectl apply -f ./kubernetes/promote-canary.yaml

            echo "Canary deployment promoted to production successfully."
          else
            # Si la aprobación falla, revertimos el despliegue canary
            echo "Canary deployment rejected. Rolling back..."
            # Eliminamos el despliegue canary y redirigimos todo el tráfico al despliegue estable
            kubectl delete -f ./kubernetes/canary-deployment.yaml
            echo "Canary deployment rejected and rolled back."
          fi
