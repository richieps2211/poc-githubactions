name: Create Azure AKS With Terraform

# Configuración de los eventos que dispararán el workflow
on:
  push: # Ejecuta el workflow cuando se haga un push a Git
    branches:
      - feature/*

# Permisos necesarios para el workflow
permissions:
  id-token: write
  contents: read

jobs:
  AKS-Cluster-Deployment:
    runs-on: ubuntu-latest # El trabajo se ejecutará en una máquina virtual con Ubuntu

    # Configuración predeterminada para los pasos del trabajo
    defaults:
      run:
        shell: bash
        working-directory: AKS # Directorio de trabajo para los pasos del workflow

    steps:
      # Paso para clonar el repositorio en la máquina virtual
      - name: Checkout
        uses: actions/checkout@v3.1.0

      # Paso para autenticarse en Azure CLI
      - name: 'Set Azure CLI environment variables'
        run: |
          export AZURE_CLIENT_ID="3e9fa4df-cde3-4fab-8afb-8586dcde9ac6"
          export AZURE_CLIENT_SECRET="77325ae7-1dfe-4bfd-90dd-b26cf4f2622d"
          export AZURE_TENANT_ID="6a70eb11-ce8f-424d-9620-582fa1b6e271"
          export AZURE_SUBSCRIPTION_ID="d66153cf-7d16-40ee-9ab2-5099995a0e77"

      - name: 'Az CLI login'
        run: |
          az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
          az account set --subscription $AZURE_SUBSCRIPTION_ID

      # Paso para configurar Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN_ID }} # Token de Terraform Cloud

      # Paso para inicializar Terraform
      - name: Terraform Init
        id: init
        run: terraform init

      # Paso para validar los archivos de configuración de Terraform
      - name: Terraform Validate
        id: validate
        run: terraform validate

      # Paso para planificar los cambios en Terraform
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      # Paso para verificar si el plan de Terraform ha fallado
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      # Paso para aplicar los cambios en Terraform (crear o actualizar recursos)
      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Paso para obtener las salidas (outputs) de Terraform
      - name: Terraform Output
        run: terraform output

      # Paso para desplegar la aplicación en el clúster AKS
      - name: Deploy Application
        run: |
          az aks get-credentials -n "cluster-bursting-jennet" -g "rg-refined-swine"
          kubectl apply -f ./AKSApp/aks-store-quickstart.yaml
          sleep 40
          kubectl get service store-front
          rm -rf ~/.kube
